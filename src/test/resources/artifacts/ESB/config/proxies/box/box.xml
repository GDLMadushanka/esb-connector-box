<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse" name="box"
       transports="https,http" statistics="disable" trace="disable"
       startOnLoad="true">
    <target>
        <inSequence>
            <property name="apiUrl" expression="json-eval($.apiUrl)"/>
            <property name="accessToken" expression="json-eval($.accessToken)"/>
            <property name="folderId" expression="json-eval($.folderId)"/>
            <property name="ifMatch" expression="json-eval($.ifMatch)"/>
            <property name="name" expression="json-eval($.name)"/>
            <property name="description" expression="json-eval($.description)"/>
            <property name="parentId" expression="json-eval($.parentId)"/>
            <property name="sharedLink" expression="json-eval($.sharedLink)"/>
            <property name="folderUploadEmail" expression="json-eval($.folderUploadEmail)"/>
            <property name="ownedBy" expression="json-eval($.ownedBy)"/>
            <property name="syncState" expression="json-eval($.syncState)"/>
            <property name="tags" expression="json-eval($.tags)"/>
            <property name="fields" expression="json-eval($.fields)"/>
            <property name="fileId" expression="json-eval($.fileId)"/>
            <property name="commentId" expression="json-eval($.commentId)"/>
            <property name="limit" expression="json-eval($.limit)"/>
            <property name="filterTerm" expression="json-eval($.filterTerm)"/>
            <property name="offset" expression="json-eval($.offset)"/>
            <property name="message" expression="json-eval($.message)"/>
            <property name="notify" expression="json-eval($.notify)"/>
            <property name="sourceUserId" expression="json-eval($.sourceUserId)"/>
            <property name="targetUserId" expression="json-eval($.targetUserId)"/>
            <property name="version" expression="json-eval($.version)"/>
            <property name="itemType" expression="json-eval($.itemType)"/>
            <property name="itemId" expression="json-eval($.itemId)"/>
            <property name="query" expression="json-eval($.query)"/>
            <property name="sharedLinkPassword" expression="json-eval($.sharedLinkPassword)"/>
            <property name="recursive" expression="json-eval($.recursive)"/>

            <box.init>
                <accessToken>{$ctx:accessToken}</accessToken>
                <apiUrl>{$ctx:apiUrl}</apiUrl>
                <fields>{$ctx:fields}</fields>
            </box.init>

            <switch source="get-property('transport', 'Action')">
                <case regex="urn:updateFolderInformation">
                    <box.updateFolderInformation>
                        <tags>{$ctx:tags}</tags>
                        <folderUploadEmail>{$ctx:folderUploadEmail}</folderUploadEmail>
                        <sharedLink>{$ctx:sharedLink}</sharedLink>
                        <syncState>{$ctx:syncState}</syncState>
                        <description>{$ctx:description}</description>
                        <name>{$ctx:name}</name>
                        <parentId>{$ctx:parentId}</parentId>
                        <ownedBy>{$ctx:ownedBy}</ownedBy>
                        <ifMatch>{$ctx:ifMatch}</ifMatch>
                        <folderId>{$ctx:folderId}</folderId>
                    </box.updateFolderInformation>
                </case>

                <case regex="urn:updateFileInformation">
                    <box.updateFileInformation>
                        <tags>{$ctx:tags}</tags>
                        <fileId>{$ctx:fileId}</fileId>
                        <sharedLink>{$ctx:sharedLink}</sharedLink>
                        <description>{$ctx:description}</description>
                        <name>{$ctx:name}</name>
                        <parentId>{$ctx:parentId}</parentId>
                        <ifMatch>{$ctx:ifMatch}</ifMatch>
                    </box.updateFileInformation>
                </case>

                <case regex="urn:shareFile">
                    <box.shareFile>
                        <sharedLink>{$ctx:sharedLink}</sharedLink>
                        <fileId>{$ctx:fileId}</fileId>
                    </box.shareFile>
                </case>

                <case regex="urn:deleteComment">
                    <box.deleteComment>
                        <commentId>{$ctx:commentId}</commentId>
                    </box.deleteComment>
                </case>

                <case regex="urn:createFolder">
                    <box.createFolder>
                        <name>{$ctx:name}</name>
                        <parentId>{$ctx:parentId}</parentId>
                    </box.createFolder>
                </case>
                <case regex="urn:deleteFile">
                    <box.deleteFile>
                        <fileId>{$ctx:fileId}</fileId>
                        <ifMatch>{$ctx:ifMatch}</ifMatch>
                    </box.deleteFile>
                </case>
                <case regex="urn:listUsers">
                    <box.listUsers>
                        <limit>{$ctx:limit}</limit>
                        <offset>{$ctx:offset}</offset>
                        <filterTerm>{$ctx:filterTerm}</filterTerm>
                    </box.listUsers>
                </case>
                <case regex="urn:shareFolder">
                    <box.shareFolder>
                        <sharedLink>{$ctx:sharedLink}</sharedLink>
                        <folderId>{$ctx:folderId}</folderId>
                    </box.shareFolder>
                </case>
                <case regex="urn:updateComment">
                    <box.updateComment>
                        <message>{$ctx:message}</message>
                        <commentId>{$ctx:commentId}</commentId>
                    </box.updateComment>
                </case>

                <case regex="urn:getComment">
                    <box.getComment>
                        <commentId>{$ctx:commentId}</commentId>
                    </box.getComment>
                </case>
                <case regex="urn:getFileInformation">
                    <box.getFileInformation>
                        <fileId>{$ctx:fileId}</fileId>
                    </box.getFileInformation>
                </case>
                <case regex="urn:getFolderInformation">
                    <box.getFolderInformation>
                        <folderId>{$ctx:folderId}</folderId>
                    </box.getFolderInformation>
                </case>
                <case regex="urn:copyFile">
                    <box.copyFile>
                        <fileId>{$ctx:fileId}</fileId>
                        <name>{$ctx:name}</name>
                        <parentId>{$ctx:parentId}</parentId>
                    </box.copyFile>
                </case>

                <case regex="urn:copyFolder">
                    <box.copyFolder>
                        <name>{$ctx:name}</name>
                        <parentId>{$ctx:parentId}</parentId>
                        <folderId>{$ctx:folderId}</folderId>
                    </box.copyFolder>
                </case>

                <case regex="urn:moveFolder">
                    <box.moveFolder>
                        <notify>{$ctx:notify}</notify>
                        <sourceUserId>{$ctx:sourceUserId}</sourceUserId>
                        <targetUserId>{$ctx:targetUserId}</targetUserId>
                        <folderId>{$ctx:folderId}</folderId>
                    </box.moveFolder>
                </case>

                <case regex="urn:downloadFile">
                    <box.downloadFile>
                        <fileId>{$ctx:fileId}</fileId>
                        <version>{$ctx:version}</version>
                    </box.downloadFile>
                </case>

                <case regex="urn:createComment">
                    <box.createComment>
                        <itemType>{$ctx:itemType}</itemType>
                        <itemId>{$ctx:itemId}</itemId>
                        <message>{$ctx:message}</message>
                    </box.createComment>
                </case>
                <case regex="urn:search">
                    <box.search>
                        <limit>{$ctx:limit}</limit>
                        <query>{$ctx:query}</query>
                        <offset>{$ctx:offset}</offset>
                    </box.search>
                </case>

                <case regex="urn:getSharedItem">
                    <box.getSharedItem>
                        <sharedLink>{$ctx:sharedLink}</sharedLink>
                        <sharedLinkPassword>{$ctx:sharedLinkPassword}</sharedLinkPassword>
                    </box.getSharedItem>
                </case>

                <case regex="urn:listFileComments">
                    <box.listFileComments>
                        <fileId>{$ctx:fileId}</fileId>
                    </box.listFileComments>
                </case>

                <case regex="urn:deleteFolder">
                    <box.deleteFolder>
                        <recursive>{$ctx:recursive}</recursive>
                        <ifMatch>{$ctx:ifMatch}</ifMatch>
                        <folderId>{$ctx:folderId}</folderId>
                    </box.deleteFolder>
                </case>

            </switch>

            <respond/>
        </inSequence>
        <outSequence>
            <log/>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>
                                